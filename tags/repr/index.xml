<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>repr() on Ankita Sharma</title>
    <link>https://ankitaS11.github.io/tags/repr/</link>
    <description>Recent content in repr() on Ankita Sharma</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 23 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://ankitaS11.github.io/tags/repr/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding __ str __( ) and  __ repr __( ) in Python</title>
      <link>https://ankitaS11.github.io/posts/2021/09/understanding-__-str-__-and-__-repr-__-in-python/</link>
      <pubDate>Thu, 23 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ankitaS11.github.io/posts/2021/09/understanding-__-str-__-and-__-repr-__-in-python/</guid>
      <description>In class and objects, dunder str ( __ str __( ) ) and dunder repr ( __ repr __( ) ) built-in functions, also known as magic functions are used to return the string representation of the object. If both of them return strings, then what’s the difference between them?
Firstly, let’s see what these functions returns when they are not defined in the class.
# Creating a class named Addition class Addition: def __init__(self,num1,num2): self.</description>
    </item>
    
  </channel>
</rss>
